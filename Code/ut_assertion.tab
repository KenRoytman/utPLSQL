-- Modification History:
-- studious:01/20/2002:Assertion for object existance 

CREATE TABLE ut_assertion (
   id INTEGER ,
   NAME VARCHAR2(100), -- MUST corresponds to utAssert2 program name
   description VARCHAR2(1000),
   /* Rest of columns, V1 compatibility; too generic to be useful. */
   use_msg CHAR(1) DEFAULT 'Y',
   use_null_ok CHAR(1) DEFAULT 'Y',
   use_raise_exc CHAR(1) DEFAULT 'Y',
   use_check_this CHAR(1) DEFAULT 'Y',
   check_this_label VARCHAR2(100)
      DEFAULT 'Check this',
   use_check_this_where CHAR(1) DEFAULT 'N',
   check_this_where_label VARCHAR2(100)
      DEFAULT 'Check this WHERE clause',
   use_against_this CHAR(1) DEFAULT 'Y',
   against_this_label VARCHAR2(100)
      DEFAULT 'Against this',
   use_against_this_where CHAR(1) DEFAULT 'N',
   against_this_where_label VARCHAR2(100)
      DEFAULT 'Against this WHERE clause',
   use_check_this_dir CHAR(1) DEFAULT 'N',
   check_this_dir_label VARCHAR2(100)
      DEFAULT 'Location of "check this" file',
   use_against_this_dir CHAR(1) DEFAULT 'N',
   against_this_dir_label VARCHAR2(100)
      DEFAULT 'Location of "against this" file',
  CONSTRAINT ut_assertion_pk PRIMARY KEY (id)
);

CREATE UNIQUE INDEX ut_assertion_idx1 ON
   ut_assertion (NAME);

BEGIN
   INSERT INTO ut_assertion
               (id, NAME,
                description)
        VALUES (1, 'THIS',
                'General Boolean expression evaluation');

   INSERT INTO ut_assertion
               (id, NAME,
                description)
        VALUES (2, 'EQ',
                'Scalar equality');

   INSERT INTO ut_assertion
               (id, NAME,
                description)
        VALUES (3, 'EQTABLE',
                'Database table/view equality');

   INSERT INTO ut_assertion
               (id, NAME,
                description)
        VALUES (4, 'EQTABCOUNT',
                'Database table/view row count comparison');

   INSERT INTO ut_assertion
               (id, NAME,
                description)
        VALUES (5, 'EQQUERY',
                'Query result set equality');

   INSERT INTO ut_assertion
               (id, NAME,
                description)
        VALUES (6, 'EQQUERYVALUE',
                'Query return value comparison');

   INSERT INTO ut_assertion
               (id, NAME,
                description)
        VALUES (7, 'EQFILE',
                'Operating system file equality');

   INSERT INTO ut_assertion
               (id, NAME,
                description)
        VALUES (8, 'EQPIPE',
                'Database pipe equality');

   INSERT INTO ut_assertion
               (id, NAME,
                description)
        VALUES (9, 'EQCOLL',
                'Collection equality - direct access');

   INSERT INTO ut_assertion
               (id, NAME,
                description)
        VALUES (10, 'EQCOLLAPI',
                'Collection equality - API access');

   INSERT INTO ut_assertion
               (id, NAME,
                description)
        VALUES (11, 'ISNOTNULL',
                'NOTNULL validation');

   INSERT INTO ut_assertion
               (id, NAME,
                description)
        VALUES (12, 'ISNULL',
                'NULL validation');

   INSERT INTO ut_assertion
               (id, NAME,
                description)
        VALUES (13, 'RAISES',
                'Raised exception validation');

   INSERT INTO ut_assertion
               (id, NAME,
                description)
        VALUES (14, 'FILEEXISTS',
                'Confirm that specified file exists');

   INSERT INTO ut_assertion
               (id, NAME,
                description)
        VALUES (15, 'EVALUATE',
                'General evaluation of specified expression');

-- START username:STUDIOUS Date:01/11/2002 Task_id:42690
-- Description: Checking whether object exists 

   INSERT INTO ut_assertion
               (id, NAME,
                description)
        VALUES (16, 'OBJEXISTS',
                'Confirm that specified Object exists');

   INSERT INTO ut_assertion
               (id, NAME,
                description)
        VALUES (17, 'OBJNOTEXISTS',
                'Confirm that specified Object does not exist');

-- END username:STUDIOUS Task_id:42690

   COMMIT;
END;
/

